@using Xunit;
@inherits TestContext
@code
{
    public FluentInfoButtonTests()
    {
        JSInterop.Mode = JSRuntimeMode.Loose;
        Services.AddSingleton(new LibraryConfiguration());
    }

    [Fact]
    public void FluentInfoButton_Default()
    {
        // Arrange && Act
        var cut = Render(@<FluentInfoButton Id="InfoButton">
        This is example information for an InfoButton
        <a href="https://www.fluentui-blazor.net/InfoButton">Learn more</a>
    </FluentInfoButton>);

        // Assert
        cut.Verify();
    }

    [Fact]
    public void FluentInfoButton_Postiion()
    {
        // Arrange && Act
        var cut = Render(@<FluentInfoButton Id="InfoButton" Position="TooltipPosition.Start">
        This is example information for an InfoButton
        <a href="https://www.fluentui-blazor.net/InfoButton">Learn more</a>
    </FluentInfoButton>);

        // Assert
        cut.Verify();
    }

    [Fact]
    public void FluentInfoButton_MaxWidth()
    {
        // Arrange && Act
        var cut = Render(@<FluentInfoButton Id="InfoButton" MaxWidth="300px">
        This is example information for an InfoButton
        <a href="https://www.fluentui-blazor.net/InfoButton">Learn more</a>
    </FluentInfoButton>);

        // Assert
        cut.Verify();
    }

    [Fact]
    public void FluentInfoButton_IconColor()
    {
        // Arrange && Act
        var cut = Render(@<FluentInfoButton Id="InfoButton" IconColor="Color.Custom" IconCustomColor="red">
        This is example information for an InfoButton
        <a href="https://www.fluentui-blazor.net/InfoButton">Learn more</a>
    </FluentInfoButton>);

        // Assert
        cut.Verify();
    }
}

@namespace Microsoft.FluentUI.AspNetCore.Components
@inherits FluentInputBase<int>

<FluentInputLabel ForId="@Id" Label="@Label" AriaLabel="@AriaLabel" ChildContent="@LabelTemplate" Required="@Required" />

<FluentStack Id="@Id"
             Orientation="Orientation.Horizontal"
             Class="ClassValue"
             Style="StyleValue"
             role="radiogroup"
             @onkeydown="HandleKeyDownAsync"
             tabindex="@(Disabled ? -1 : 0)"
             aria-readonly="@(ReadOnly ? "true" : "false")"
             HorizontalGap="0">
    @for (int i = 1; i <= MaxValue; i++)
    {
        var currentValue = i;
        @if (ReadOnly || Disabled)
        {
            <FluentIcon Value="@GetIcon(currentValue)"
                        Color="@(Disabled && IconColor != Color.Custom  ? Color.Disabled :  IconColor)"
                        CustomColor="@IconCustomColor" />
        }
        else
        {
            <FluentIcon Value="@GetIcon(currentValue)"
                        Color="IconColor"
                        CustomColor="@IconCustomColor"
                        OnClick="@(() => OnClickAsync(currentValue))"
                        @onpointerover="@(async () => await OnPointerOverAsync(currentValue))"
                        @onpointerout="@(async () => await OnPointerOutAsync())" />
        }
    }
</FluentStack>
